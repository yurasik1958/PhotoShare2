"""add unique

Revision ID: fe24bf823d7d
Revises: 1e30e1962637
Create Date: 2023-10-23 19:13:51.868885

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fe24bf823d7d'
down_revision: Union[str, None] = '1e30e1962637'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("CREATE TYPE userrole AS ENUM ('admin','moderator','user')")
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('photo_urls', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('tags', sa.Column('created_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###
    op.drop_column('users', 'roles')
    op.add_column('users', sa.Column('roles', sa.Enum('admin', 'moderator', 'user', name='userrole'), nullable=True)),
    op.execute("update users set roles = 'admin' where id = 1")
    op.execute("update users set roles = 'user' where id > 1")


def downgrade() -> None:
    op.drop_column('users', 'roles')
    op.add_column('users', sa.Column('roles', sa.Enum('admin', 'moderator', 'user', name='role'), nullable=True)),
    op.execute("update users set roles = 'admin' where id = 1")
    op.execute("update users set roles = 'user' where id > 1")
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('tags', 'created_at')
    op.drop_column('photo_urls', 'updated_at')
    # ### end Alembic commands ###
    op.execute("drop type userrole")
